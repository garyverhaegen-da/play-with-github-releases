trigger:
- master

jobs:
  - job: linux
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
      - template: ./build-unix.yml
        parameters:
          name: linux
        name: step
  - job: macOS
    pool:
      vmImage: 'macOS-10.13'
    steps:
      - template: ./build-unix.yml
        parameters:
          name: macOS
        name: step
  - job: vars
    dependsOn: [ "linux", "macOS" ]
    variables:
      linuxReleased: $[ dependencies.linux.outputs['step.maybeRelease.has_released'] ]
      macOSReleased: $[ dependencies.macOS.outputs['maybeRelease.has_released'] ]
      other: $[ dependencies.macOS.outputs['step.has_released'] ]
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
      - checkout: self
        persistCredentials: true
      - bash: |
          set -euxo pipefail
          echo $(linuxReleased)
          echo $(macOSReleased)
          echo $(other)
          echo $(has_released)
          echo $(linux.has_released)
          echo $(dependencies.linux.has_released)
          echo $( $[ dependencies.linux.outputs['has_released'] ] )
          echo $( $[ dependencies.linux.outputs['maybeRelease.has_released'] ] )
          echo $( $[ dependencies.linux.outputs.maybeRelease.has_released ] )
          echo $( $[ dependencies.linux.maybeRelease.has_released ] )
  - job: release
    dependsOn: [ "linux", "macOS" ]
    variables:
      linuxReleased: $[ dependencies.linux.outputs['has_released'] ]
      macOSReleased: $[ dependencies.macOS.outputs['has_released'] ]
    condition: and(succeeded(),
                   eq( variables['linuxReleased'], 'true'),
                   eq( variables['macOSReleased'], 'true'))
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
      - checkout: self
        persistCredentials: true
      - bash: |
          set -euxo pipefail
          git tag v$(release_tag)
          git push origin v$(release_tag)
      - task: GitHubRelease@0
        inputs:
          gitHubConnection: 'garyverhaegen-da'
          repositoryName: '$(Build.Repository.Name)'
          action: 'create'
          target: '$(Build.SourceVersion)'
          tagSource: 'auto'
          assets: '$(Build.ArtifactStagingDirectory)'
          assetUploadMode: 'replace'
          addChangeLog: false
          isPrerelease: true
