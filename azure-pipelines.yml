trigger:
- master

jobs:
  - job: linux
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    - template: ./build-unix.yml
      parameters:
        name: linux
  - job: macOS
    pool:
      vmImage: 'macOS-10.13'
    steps:
    - template: ./build-unix.yml
      parameters:
        name: macOS
  - job: release
    dependsOn: [ "linux", "macOS" ]
    condition: and(succeeded(),
                   eq( dependencies.linux.outputs['maybeRelease.has_released'], 'true'),
                   eq( dependencies.macOS.outputs['maybeRelease.has_released'], 'true'))
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    - checkout: self
      persistCredentials: true
    - bash: |
        set -euxo pipefail
        git tag v$(cat VERSION)
        git push origin v$(cat VERSION)
        mkdir $(Build.StagingDirectory)/release
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: $[ dependencies.linux.outputs['hasReleased.artifact'] ]
        targetPath: $(Build.StagingDirectory)/release
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: $[ dependencies.macos.outputs['hasReleased.artifact'] ]
        targetPath: $(Build.StagingDirectory)/release
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: 'garyverhaegen-da'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'auto'
        assets: '$(Build.ArtifactStagingDirectory)/release/*'
        assetUploadMode: 'replace'
        addChangeLog: false
        isPrerelease: true
